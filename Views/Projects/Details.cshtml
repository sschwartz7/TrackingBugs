@using Microsoft.AspNetCore.Identity;
@model TrackingBugs.Models.Project
@inject IBTFileService _BTFileService
@inject IProjectService _ProjectService
@inject IBTTicketService _TicketService
@inject IBTRoleService _RoleService
@inject UserManager<BTUser> UserManager

@{
    ViewData["Title"] = "Details";
    BTUser? projectManager = await _ProjectService.GetProjectManagerAsync(Model.Id)!;
    BTUser? appUser = await UserManager.GetUserAsync(User);

    List<BTUser> delvelopers = await _RoleService.GetUsersInRoleAsync(nameof(BTRoles.Developer), User.Identity!.GetCompanyId());
    List<BTUser> submitters = await _RoleService.GetUsersInRoleAsync(nameof(BTRoles.Submitter), User.Identity!.GetCompanyId());
    List<BTUser> usersList = submitters.Concat(delvelopers).ToList();
    IEnumerable<string> currentMembers = Model.Members.Select(u => u.Id);
    MultiSelectList members = new MultiSelectList(usersList, "Id", "FullName", currentMembers);

    IEnumerable<BTUser> projectManagers = await _RoleService.GetUsersInRoleAsync(nameof(BTRoles.ProjectManager), User.Identity!.GetCompanyId());
    SelectList PMList = new SelectList(projectManagers, "Id", "FullName", projectManager);

}


<!-- Main Content-->
<div class="main-content pt-0">

    <div class="main-container container-fluid">
        <div class="inner-body">

            <!-- Page Header -->
            <div class="page-header">
                <div>
                    <h2 class="main-content-title tx-24 mg-b-5">@Model.Name</h2>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Projects">Projects</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                    </ol>
                </div>
            </div>
            <!-- End Page Header -->

            <div class="row square">
                <div class="col-lg-12 col-md-12">
                    <div class="card custom-card">
                        <div class="card-body">
                            <div class="panel profile-cover">
                                <div class="profile-cover__img">
                                    <img src="~/assets/img/users/1.jpg" alt="img" />
                                    <h3 class="h3">@Model.Name</h3>
                                </div>
                                <div class="profile-cover__action bg-img"></div>
                                <div class="profile-cover__info">
                                    <ul class="nav">
                                        <li><strong>Start Date:</strong> <span class="">@Model.StartDate</span></li>
                                        <li><strong>Deadline:</strong> <span class="">@Model.EndDate</span></li>
                                        <li><strong>Priority:</strong> <span class="">@Model.ProjectPriority.Name</span></li>
                                        <li><strong>@(Model.Archived == true ? "Inactive" : "Active")</strong></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="profile-tab tab-menu-heading">
                                <nav class="nav main-nav-line p-3 tabs-menu profile-nav-line bg-gray-100">
                                    <a class="nav-link  active" data-bs-toggle="tab" href="#about">About</a>
                                    <a class="nav-link" data-bs-toggle="tab" href="#history">History</a>
                                    <a class="nav-link" data-bs-toggle="tab" href="#members">Members</a>
                                    <a class="nav-link" data-bs-toggle="tab" href="#tickets">Tickets</a>
                                    @if (User.IsInRole("Admin")||projectManager?.Id == UserManager.GetUserId(User))
                                    {
                                        <a class="nav-link" data-bs-toggle="tab" href="#edit">Edit</a>
                                    }
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Row -->
            <div class="row row-sm">
                <div class="col-lg-12 col-md-12">
                    <div class="card custom-card main-content-body-profile">
                        <div class="tab-content">
                            <div class="main-content-body tab-pane p-4 border-top-0 active" id="about">
                                <div class="card-body p-0 border p-0 rounded-10 row">

                                    <div class="p-3 col-md-6">
                                        <h3>Tickets</h3>
                                        <!-- Morris: Donut -->
                                        <div class="col-md-12">
                                            <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="chart chart-md" id="morrisTicketPriority"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 p-3">
                                        <h3>Description:</h3>
                                        <p>@Model.Description</p>
                                    </div>
                                </div>
                            </div>
                            <div class="main-content-body tab-pane p-4 border-top-0" id="history">
                                <div class="card-body border">
                                    <div class="col-sm-12 col-lg-12 col-xl-12">
                                        <div class="card custom-card overflow-hidden">
                                            @foreach (TicketHistory history in Model.Tickets.SelectMany(t => t.History))
                                            {
                                                <div class="">

                                                    <span class="date" style="font-weight:bold">@history.Created.ToString("dd MMM yyyy")</span>
                                                    <h6>@history.Description</h6>
                                                    <span>By: <a href="" title="@history.User!.FullName">@history.User.FullName</a></span>
                                                    <div class="">
                                                        @if (history.Description!.Contains("New Ticket Created"))
                                                        {
                                                            <p>A ticket was added</p>
                                                        }
                                                        else if (history.PropertyName!.Equals("ticketComment") || history.PropertyName.Equals("TicketAttachment"))
                                                        {
                                                            <p>A <b>@history.PropertyName</b> was added.</p>
                                                        }
                                                        else
                                                        {
                                                            <p>The ticket <b>@history.PropertyName</b> was edited</p>
                                                            <p>@($"Previous {history.PropertyName}: ") <span style="color:red">@history.OldValue</span></p>
                                                            <p>@($"Current {history.PropertyName}: ") <span style="color:green">@history.NewValue</span></p>

                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="main-content-body tab-pane p-4 border-top-0" id="members">
                                <div class="card-body border pd-b-10">
                                    @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
                                    {
                                        <a data-bs-target="#assignMembersModal" data-bs-toggle="modal" class="btn btn-primary p-2">Assign Members</a>
                                    }
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <a data-bs-target="#assignManagerModal" data-bs-toggle="modal" class="btn btn-primary p-2">Assign Manager</a>
                                    }
                                    <!-- row -->
                                    <div class="row row-sm">
                                        <h5>Project Managers</h5>
                                        @foreach (BTUser member in Model.Members)
                                        {
                                            if (await _RoleService.IsUserInRoleAsync(member, nameof(BTRoles.ProjectManager)))
                                            {
                                                <partial name="_MembersCardPartial" model="member" />
                                            }
                                        }
                                    </div>
                                    <div class="row row-sm">
                                        <h5>Developers</h5>
                                        @foreach (BTUser member in Model.Members)
                                        {
                                            if (await _RoleService.IsUserInRoleAsync(member, nameof(BTRoles.Developer)))
                                            {
                                                <partial name="_MembersCardPartial" model="member" />
                                            }
                                        }

                                    </div>
                                    <div class="row row-sm">
                                        <h5>Submitters</h5>
                                        @foreach (BTUser member in Model.Members)
                                        {
                                            if (await _RoleService.IsUserInRoleAsync(member, nameof(BTRoles.Submitter)))
                                            {
                                                <partial name="_MembersCardPartial" model="member" />
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="main-content-body tab-pane p-4 border-top-0" id="tickets">

                                <div class="header">
                                    <h2>Tickets</h2>
                                </div>
                                <div class="body">
                                    <div class="table-responsive" style="overflow-y:auto;height:600px;">
                                        <table id="ticketTable" class="table">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        Priority
                                                    </th>
                                                    <th>
                                                        Project
                                                    </th>
                                                    <th>
                                                        Title
                                                    </th>
                                                    <th>
                                                        Submitter
                                                    </th>
                                                    <th>
                                                        Developer
                                                    </th>
                                                    <th>
                                                        Status
                                                    </th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (Ticket ticket in Model.Tickets)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => ticket.TicketPriority.Name)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => ticket.Project.Name)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => ticket.Title)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => ticket.SubmitterUser.FullName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => ticket.DeveloperUser.FullName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => ticket.TicketStatus.Name)
                                                        </td>
                                                        <td>
                                                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@ticket.Id" asp-controller="Tickets">Details</a>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>
                            <div class="main-content-body tab-pane p-4 border-top-0" id="edit">
                                <div class="card-body p-0 border p-0 rounded-10">
                                    <div class="p-4">
                                        <form asp-action="Edit" method="post">
                                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                            <input type="hidden" asp-for="Id" />
                                            <input type="hidden" asp-for="Created" />
                                            <input type="hidden" asp-for="CompanyId" />
                                            <div class="form-group">
                                                <label asp-for="StartDate" class="control-label"></label>
                                                <input asp-for="StartDate" class="form-control" />
                                                <span asp-validation-for="StartDate" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="EndDate" class="control-label"></label>
                                                <input asp-for="EndDate" class="form-control" />
                                                <span asp-validation-for="EndDate" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="ProjectPriorityId" class="control-label"></label>
                                                <select asp-for="ProjectPriorityId" class="form-control" asp-items="ViewBag.ProjectPriorityId"></select>
                                                <span asp-validation-for="ProjectPriorityId" class="text-danger"></span>
                                            </div>
                                            <div class="form-group">
                                                <label asp-for="Name" class="control-label"></label>
                                                <input asp-for="Name" class="form-control" />
                                                <span asp-validation-for="Name" class="text-danger"></span>
                                            </div>
                                            <div class="ql-wrapper ql-wrapper-demo mb-3">
                                                <label asp-for="Description" class="control-label"></label>
                                                <input asp-for="Description" id="quillEditor" />
                                            </div>
                                            <div class="row">

                                            <div class="form-group">
                                                <input type="submit" value="Save" class="btn btn-primary" />
                                            </div>
                                            </div>
                                        </form>
                                        <form asp-action="ArchiveToggle" asp-controller="Projects">
                                            <input type="hidden" asp-for="Id" />
                                            @if (Model.Archived == true)
                                            {
                                                <input type="submit" class="btn btn-outline-success" value="Unarchive">
                                            }
                                            else
                                            {
                                                <input type="submit" class="btn btn-outline-danger" value="Archive">
                                            }
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Row -->
            </div>
        </div>
    </div>
</div>
<div class="modal" id="assignMembersModal">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Assign Members</h6><button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button"></button>
            </div>
            <div class="modal-body">
                <form asp-action="AssignProjectMembers" asp-controller="Projects" method="post" class="d-flex flex-column">
                    <input type="hidden" asp-for="Id" name="Project.Id"/>
                    <select asp-items="@members" asp-for="Members" name="SelectedMembers" class="form-control" multiple required>
                    </select>
                    <span asp-validation-for="Members" name="SelectedMembers" class="text-danger"></span>
                    <button type="submit" class="btn btn-primary my-3">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="assignManagerModal">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Assign Manager</h6><button aria-label="Close" class="btn-close" data-bs-dismiss="modal" type="button"></button>
            </div>
            <div class="modal-body">
                <form asp-action="AssignPM" asp-controller="Projects" method="post" class="d-flex flex-column">
                    <input type="hidden" name="ProjectId" asp-for="Id"/>
                    <select asp-items="PMList" name="PMId">
                        <option value="">Unassigned</option>
                    </select>
                    <span name="PMId" asp-validation-for="@Model.Members" class="text-danger"></span>
                    <button type="submit" class="btn btn-primary my-3">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    @* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

        var morrisDonutData = [{
            label: "Low",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriorities.Low)).Count()
                        }, {
            label: "Medium",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriorities.Medium)).Count()
                        }, {
            label: "High",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriorities.High)).Count()
                        }, {
            label: "Urgent",
            value: @Model.Tickets.Where(t=>t.TicketPriority.Name == nameof(BTTicketPriorities.Urgent)).Count()
                        }];


        /*
        Morris: Donut
        */
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#legend').append(legendItem)
            });
        };
    </script>

    <script>
        $('#ticketTable').DataTable({
            responsive: true,
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '',
                lengthMenu: '_MENU_ items/page',
            }
        });
    </script>
}
